import discord
import openai
import os
from dotenv import load_dotenv

load_dotenv()

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

openai.api_key = OPENAI_API_KEY

intents = discord.Intents.default()
intents.message_content = True
client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f"Logged in as {client.user}")

@client.event
async def on_message(message):
    if message.author.bot:
        return

    if "#Ø³Ø¤Ø§Ù„" not in message.content:
        return

    prompt = message.content.replace("#Ø³Ø¤Ø§Ù„", "").strip()

    if not prompt:
        await message.channel.send("ÙŠØ±Ø¬Ù‰ ÙƒØªØ§Ø¨Ø© Ø§Ù„Ø³Ø¤Ø§Ù„ Ø¨Ø¹Ø¯ #Ø³Ø¤Ø§Ù„")
        return

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Ø£Ø¬Ø¨ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø¤Ø§Ù„ Ø¨Ø§Ø®ØªØµØ§Ø± ÙˆØ¨Ø§Ù„Ù„ØºØ© Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©."},
                {"role": "user", "content": prompt}
            ]
        )
        answer = response.choices[0].message.content

        embed = discord.Embed(
            title="ðŸ“Œ Ø¥Ø¬Ø§Ø¨Ø© GPT",
            description=answer,
            color=discord.Color.purple()
        )
        embed.set_footer(text="ØªÙ… Ø§Ù„Ø±Ø¯ Ø¹Ù„Ù‰ Ø³Ø¤Ø§Ù„Ùƒ Ø¨Ø§Ø³ØªØ®Ø¯Ø§Ù… GPT-3.5")
        await message.channel.send(embed=embed)

    except Exception as e:
        await message.channel.send("Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ù…Ø¹Ø§Ù„Ø¬Ø© Ø³Ø¤Ø§Ù„Ùƒ.")
        print(f"GPT Error: {e}")

if __name__ == "__main__":
    client.run(DISCORD_TOKEN)
